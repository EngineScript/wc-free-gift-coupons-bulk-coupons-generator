# Safe PR Analysis - First Stage (Unprivileged)
# Analyzes PR content and saves results as artifacts for privileged workflow

name: AI PR Analysis (Safe)

on:
  pull_request:
    types: [opened, synchronize, reopened]

# Cancel previous workflow runs for the same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: true

permissions:
  contents: read
  # NO write permissions in this workflow for security

jobs:
  analyze-pr:
    name: Analyze PR Content (Unprivileged)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code (Safe - uses default branch)
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          # SECURITY: Do NOT checkout PR head - use base branch only
          ref: ${{ github.event.pull_request.base.ref }}

      - name: Get PR diff safely
        id: pr-diff
        run: |
          # SECURITY: Get diff without checking out untrusted code
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          
          # Use GitHub API to get diff instead of git checkout
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3.diff" \
               "https://api.github.com/repos/${{ github.repository }}/compare/$BASE_SHA...$HEAD_SHA" \
               > pr_diff.txt
          
          echo "base-sha=$BASE_SHA" >> $GITHUB_OUTPUT
          echo "head-sha=$HEAD_SHA" >> $GITHUB_OUTPUT
          echo "pr-number=${{ github.event.number }}" >> $GITHUB_OUTPUT

      - name: Run AI Analysis (No secrets exposed)
        uses: google-github-actions/run-gemini-cli@v0.1.12
        with:
          prompt: |
            You are an expert WordPress plugin developer and security consultant reviewing a pull request for the "WC Free Gift Coupons Bulk Coupon Generator" WordPress plugin.
            
            PLUGIN CONTEXT:
            - WordPress plugin for bulk coupon generation that integrates with WooCommerce
            - Generates coupons compatible with "Free Gift Coupons for WooCommerce" plugin
            - Supports WordPress 6.5+ and PHP 7.4+
            - Focus: Security, performance, and proper WooCommerce integration
            - Main functionality: Bulk generation of secure, unique coupon codes
            
            COMPREHENSIVE REVIEW CHECKLIST:
            
            🔒 SECURITY ANALYSIS:
            1. Coupon code generation security (randomness, uniqueness)
            2. SQL Injection vulnerabilities in coupon creation
            3. XSS (Cross-Site Scripting) issues in admin interface
            4. CSRF (Cross-Site Request Forgery) protection for coupon generation
            5. Input validation and sanitization (product IDs, prefixes, counts)
            6. Output escaping compliance in admin forms
            7. Authentication and authorization checks (manage_woocommerce capability)
            8. Rate limiting and abuse prevention for bulk generation
            9. Nonce verification in form processing
            
            📝 WORDPRESS & WOOCOMMERCE STANDARDS:
            1. WordPress Coding Standards compliance
            2. Proper use of WordPress APIs (WP_Query, transients, options)
            3. WooCommerce API integration (WC_Coupon class usage)
            4. Hook usage (actions/filters) for extensibility
            5. Internationalization (i18n) implementation
            6. Plugin structure and organization
            7. PHPDoc documentation quality
            8. Proper coupon meta data handling
            
            ⚡ PERFORMANCE REVIEW:
            1. Bulk coupon generation efficiency
            2. Database query optimization (batch operations)
            3. Caching strategies (transient usage for product lists)
            4. Resource loading efficiency (admin scripts/styles)
            5. Memory usage considerations during bulk operations
            6. Timeout prevention for large batches
            7. Scalability implications
            
            🏗️ CODE QUALITY:
            1. Function complexity and readability
            2. Error handling implementation (try/catch, validation)
            3. Type safety and parameter validation
            4. Code reusability and DRY principles
            5. Naming conventions (WordPress standards)
            6. Proper use of WordPress sanitization functions
            
            🔧 PLUGIN-SPECIFIC:
            1. WooCommerce coupon creation best practices
            2. Free Gift Coupons plugin compatibility (meta data structure)
            3. Admin interface usability and UX
            4. Plugin activation/deactivation handling
            5. Proper coupon expiration and usage limit handling
            6. Unique coupon code generation algorithms
            7. Product validation and selection logic
            
            REVIEW FORMAT:
            For each category, provide:
            - ✅ Approved items
            - ⚠️ Issues requiring attention (with severity: CRITICAL/HIGH/MEDIUM/LOW)
            - 💡 Improvement suggestions
            - 📚 Relevant WooCommerce/WordPress documentation links
            
            Focus on actionable feedback that improves:
            - Coupon generation security and uniqueness
            - WooCommerce ecosystem compatibility
            - Code maintainability and performance
            - User experience for bulk operations
            - Integration reliability with Free Gift Coupons plugin
            
            Analyze the following PR diff:
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          
      - name: Save PR metadata for privileged workflow
        run: |
          mkdir -p ./pr-data
          echo "${{ github.event.number }}" > ./pr-data/pr-number.txt
          echo "${{ github.event.pull_request.head.sha }}" > ./pr-data/head-sha.txt
          echo "${{ github.event.pull_request.base.sha }}" > ./pr-data/base-sha.txt
          echo "${{ github.event.pull_request.user.login }}" > ./pr-data/author.txt
          echo "AI analysis completed successfully" > ./pr-data/status.txt
          
      - name: Upload analysis results
        uses: actions/upload-artifact@v4
        with:
          name: pr-analysis-${{ github.event.number }}
          path: pr-data/
          retention-days: 30
